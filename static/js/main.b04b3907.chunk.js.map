{"version":3,"sources":["HomePage.jsx","Repos.jsx","CurrentRepo.jsx","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","StLink","Link","Controls","div","Profile","Info","Img","img","Name","h3","Bio","p","HomePage","profileName","validate","useState","detailsAreVisible","setDetailsAreVisible","profileData","setProfileData","login","name","bio","avatar","avatar_url","repos","public_repos","useEffect","a","fetch","res","json","data","getData","onSubmit","e","preventDefault","htmlFor","className","type","onBlur","placeholder","onClick","state","to","src","width","height","alt","Heading","h1","SearchWrap","SearchInput","CheckboxWrap","CheckLabel","CheckInput","Ul","ul","Li","li","Repos","query","setQuery","sortByStars","setSortByStars","onChange","target","value","toLowerCase","checked","filter","r","includes","sort","b","stargazers_count","map","repo","key","id","pathname","search","A","H1","P","Desc","withRouter","props","URLSearchParams","location","Number","get","href","html_url","role","aria-label","description","open_issues","App","setProfileName","setRepos","basename","process","exact","path","trim","test","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b04b3907.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    margin: 10px 0;\n    width: max-content;\n    font-size: 1.2em;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 10px;\n    padding: 5px;\n    border: 1px solid #eee;\n\n    &:focus {\n        transform: skew(-10deg);\n    }\n    transition: all 0.5s ease-in-out;\n`;\n\nconst Button = styled.button`\n    margin: 10px;\n    border: 1px solid #eee;\n    padding: 10px 25px;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        background-color: #eee;\n        color: #000;\n        transform: skew(-10deg);\n    }\n    transition: all 0.5s ease-in-out;\n`;\n\nconst StLink = styled(Link)`\n    display: inline-block;\n    text-decoration: none;\n    padding: 10px 20px;\n    border: 1px solid #2fd;\n    color: #2fd;\n\n    &:hover,\n    &:active {\n        background-color: #eee;\n        color: #000;\n        transform: skew(-10deg);\n    }\n    transition: all 0.5s ease-in-out;\n`;\n\nconst Controls = styled.div`\n    margin: 0 auto;\n    max-width: 60%;\n    text-align: center;\n`;\n\nconst Profile = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    @media (max-width: 630px) {\n        flex-direction: column;\n        text-align: center;\n    }\n`;\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    margin: 0 15px;\n`;\n\nconst Img = styled.img`\n    border-radius: 15px;\n    margin: 0 10px;\n    @media (max-width: 630px) {\n        margin: 15px auto;\n    }\n`;\n\nconst Name = styled.h3`\n    font-size: 2.5em;\n    @media (max-width: 630px) {\n        margin-bottom: 15px;\n    }\n`;\n\nconst Bio = styled.p`\n    @media (max-width: 630px) {\n        margin-bottom: 15px;\n    }\n`;\n\nfunction HomePage({ profileName, validate }) {\n    const [detailsAreVisible, setDetailsAreVisible] = useState(false);\n    const [profileData, setProfileData] = useState({});\n\n    const { login, name, bio, avatar_url: avatar, public_repos: repos } = profileData;\n\n    const toggleDetails = () => {\n        setDetailsAreVisible(state => !state);\n    };\n\n    useEffect(() => {\n        async function getData() {\n            const res = await fetch(`https://api.github.com/users/${profileName}`);\n            const data = await res.json();\n\n            setProfileData(data);\n        }\n        getData();\n    }, [profileName]);\n\n    return (\n        <>\n            <Form onSubmit={e => e.preventDefault()}>\n                <Label htmlFor=\"profile\" className=\"search\">\n                    Look for a Github profile:\n                </Label>\n                <Input name=\"profile\" type=\"text\" onBlur={validate} placeholder=\"gaearon, etc...\" />\n            </Form>\n            <Controls>\n                <Button className=\"show-details-btn\" onClick={toggleDetails}>\n                    Show {login} profile details\n                </Button>\n\n                <StLink to=\"/repos\">Repos</StLink>\n            </Controls>\n\n            {profileName && detailsAreVisible && (\n                <Profile className=\"profile-details\">\n                    <Img className=\"profile-photo\" src={avatar} width={250} height={250} alt=\"user avatar\" />\n                    <Info className=\"profile-info\">\n                        <Name>{name}</Name>\n                        <Bio>{bio}</Bio>\n                        <p>Repositories: {repos}</p>\n                    </Info>\n                </Profile>\n            )}\n        </>\n    );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Heading = styled.h1`\n    text-align: center;\n    margin: 15px 0;\n`;\n\nconst SearchWrap = styled.div`\n    text-align: center;\n`;\n\nconst SearchInput = styled.input`\n    margin-bottom: 10px;\n    border-radius: 15px;\n    padding: 10px;\n    border: 1px solid #eee;\n`;\n\nconst CheckboxWrap = styled.div`\n    text-align: center;\n`;\n\nconst CheckLabel = styled.label`\n    position: relative;\n`;\n\nconst CheckInput = styled.input`\n    position: absolute;\n    left: -22px;\n    top: -1px;\n    &:active,\n    :focus {\n        outline: 1px solid #222; /*visually hides the outline*/\n    }\n`;\n\nconst Ul = styled.ul`\n    list-style-type: none;\n    margin: 20px;\n    margin-left: 50px;\n\n    /* horizontal list */\n    /* display: flex;\n    flex-wrap: wrap;        \n    justify-content: space-evenly; */\n`;\n\nconst Li = styled.li`\n    margin: 20px;\n    font-size: 1.2em;\n`;\n\nconst StLink = styled(Link)`\n    text-decoration: none;\n    &:hover,\n    :active {\n        color: #2fd;\n        text-decoration: underline;\n    }\n`;\n\nfunction Repos({ repos }) {\n    const [query, setQuery] = useState('');\n    const [sortByStars, setSortByStars] = useState(false);\n\n    return (\n        <>\n            <Heading>Public repositories list</Heading>\n            <SearchWrap>\n                <label>\n                    Search: <SearchInput type=\"text\" onChange={e => setQuery(e.target.value.toLowerCase())} />\n                </label>\n            </SearchWrap>\n            <CheckboxWrap>\n                <CheckLabel>\n                    <CheckInput type=\"checkbox\" onChange={e => setSortByStars(e.target.checked)} />\n                    Sort by stars\n                </CheckLabel>\n            </CheckboxWrap>\n            <Ul>\n                {repos\n                    .filter(r => r.name.toLowerCase().includes(query))\n                    .sort((a, b) => (sortByStars ? b.stargazers_count - a.stargazers_count : 0))\n                    .map(repo => (\n                        <Li key={repo.id}>\n                            <StLink to={{ pathname: '/repo', search: `?id=${repo.id}`, state: repo }}>{repo.name}</StLink>\n                        </Li>\n                    ))}\n            </Ul>\n        </>\n    );\n}\n\nexport default Repos;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst A = styled.a`\n    text-decoration: none;\n`;\n\nconst H1 = styled.h1`\n    text-align: center;\n    color: #2fd;\n    font-size: 3.5em;\n    padding: 10px;\n`;\n\nconst P = styled.p`\n    text-align: center;\n    margin-bottom: 15px;\n`;\n\nconst Desc = styled.p`\n    text-align: center;\n    margin: auto;\n    margin-bottom: 15px;\n    position: relative;\n    width: max-content;\n\n    &:before {\n        content: '';\n        position: absolute;\n        left: -20px;\n        width: 10px;\n        height: 100%;\n        background: linear-gradient(to right, #222, #fff);\n    }\n`;\n\nfunction CurrentRepo(props) {\n    const repos = props.repos;\n    const query = new URLSearchParams(props.location.search);\n\n    const id = Number(query.get('id'));\n\n    const repo = repos.filter(r => r.id === id)[0] || []; // filter return single elem array, initially undefined\n\n    return (\n        <>\n            <A href={repo.html_url}>\n                <H1>{repo.name}</H1>\n            </A>\n            <P>\n                {repo.stargazers_count}\n                <span role=\"img\" aria-label=\"stars\">\n                    &#127775;\n                </span>\n            </P>\n            <Desc>{repo.description}</Desc>\n            <P>Issues: {repo.open_issues}</P>\n        </>\n    );\n}\n\nexport default withRouter(CurrentRepo);\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport HomePage from './HomePage';\nimport Repos from './Repos';\nimport CurrentRepo from './CurrentRepo';\n\nfunction App() {\n    const [profileName, setProfileName] = useState('');\n    const [repos, setRepos] = useState([]);\n\n    const getValidProfileName = e => {\n        const input = e.target.value.trim();\n        const regex = /^[a-zA-Z0-9-]+$/;\n\n        if (regex.test(input)) {\n            setProfileName(input);\n        }\n    };\n\n    useEffect(() => {\n        async function getData() {\n            const res = await fetch(`https://api.github.com/users/${profileName}/repos`);\n            const data = await res.json();\n\n            setRepos(data);\n        }\n        getData();\n    }, [profileName]);\n\n    return (\n        <>\n            <div className=\"App\">\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Route exact path=\"/\">\n                        <HomePage profileName={profileName} validate={getValidProfileName} />\n                    </Route>\n\n                    <Route exact path=\"/repos/\">\n                        <Repos repos={repos} />\n                    </Route>\n\n                    <Route path=\"/repo/\">\n                        <CurrentRepo repos={repos} />\n                    </Route>\n                </Router>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n        margin:0;\n        padding:0;\n        background-color: #222;\n        color: #fff;\n    }\n`;\n\nReactDOM.render(\n    <>\n        <GlobalStyle />\n        <App />\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}