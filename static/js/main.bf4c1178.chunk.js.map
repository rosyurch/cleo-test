{"version":3,"sources":["HomePage.jsx","Repos.jsx","CurrentRepo.jsx","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","StLink","Link","Controls","div","Profile","Info","Img","img","Name","h3","Bio","p","HomePage","profileName","validate","useState","profileData","setProfileData","inputName","setInputName","login","name","bio","avatar","avatar_url","repos","public_repos","useEffect","a","fetch","res","json","data","getData","onSubmit","e","preventDefault","htmlFor","className","type","onChange","target","value","placeholder","onClick","to","src","width","height","alt","Heading","h1","SearchWrap","SearchInput","CheckboxWrap","CheckLabel","CheckInput","Ul","ul","Li","li","Repos","query","setQuery","sortByStars","setSortByStars","toLowerCase","checked","filter","r","includes","sort","b","stargazers_count","map","repo","key","id","pathname","search","state","A","H1","P","Desc","withRouter","props","URLSearchParams","location","Number","get","href","html_url","role","aria-label","description","open_issues","App","setProfileName","setRepos","basename","process","exact","path","trim","test","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf4c1178.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    margin: 10px 0;\n    width: max-content;\n    font-size: 1.2em;\n`;\n\nconst Input = styled.input`\n    margin-bottom: 10px;\n    padding: 5px;\n    border: 1px solid #eee;\n\n    &:focus {\n        transform: skew(-10deg);\n    }\n    transition: all 0.5s ease-in-out;\n`;\n\nconst Button = styled.button`\n    margin: 10px;\n    border: 1px solid #eee;\n    padding: 10px 25px;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        background-color: #eee;\n        color: #000;\n        transform: skew(-10deg);\n    }\n    transition: all 0.5s ease-in-out;\n`;\n\nconst StLink = styled(Link)`\n    display: inline-block;\n    text-decoration: none;\n    padding: 10px 20px;\n    border: 1px solid #2fd;\n    color: #2fd;\n\n    &:hover,\n    &:active {\n        background-color: #eee;\n        color: #000;\n        transform: skew(-10deg);\n    }\n    transition: all 0.5s ease-in-out;\n`;\n\nconst Controls = styled.div`\n    margin: 0 auto;\n    max-width: 60%;\n    text-align: center;\n`;\n\nconst Profile = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    @media (max-width: 630px) {\n        flex-direction: column;\n        text-align: center;\n    }\n`;\n\nconst Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    margin: 0 15px;\n`;\n\nconst Img = styled.img`\n    border-radius: 15px;\n    margin: 0 10px;\n    @media (max-width: 630px) {\n        margin: 15px auto;\n    }\n`;\n\nconst Name = styled.h3`\n    font-size: 2.5em;\n    @media (max-width: 630px) {\n        margin-bottom: 15px;\n    }\n`;\n\nconst Bio = styled.p`\n    @media (max-width: 630px) {\n        margin-bottom: 15px;\n    }\n`;\n\nfunction HomePage({ profileName, validate }) {\n    const [profileData, setProfileData] = useState({});\n    const [inputName, setInputName] = useState('');\n\n    const { login, name, bio, avatar_url: avatar, public_repos: repos } = profileData;\n\n    useEffect(() => {\n        async function getData() {\n            const res = await fetch(`https://api.github.com/users/${profileName}`);\n            const data = await res.json();\n\n            setProfileData(data);\n        }\n        getData();\n    }, [profileName]);\n\n    return (\n        <>\n            <Form onSubmit={e => e.preventDefault()}>\n                <Label htmlFor=\"profile\" className=\"search\">\n                    Look for a Github profile:\n                </Label>\n\n                <Input name=\"profile\" type=\"text\" onChange={e => setInputName(e.target.value)} placeholder=\"gaearon, etc...\" />\n\n                <Button onClick={e => validate(inputName)}>Fetch</Button>\n            </Form>\n            <Controls>\n                <StLink to=\"/repos\">Repos</StLink>\n            </Controls>\n\n            {profileName && (\n                <Profile className=\"profile-details\">\n                    <Img className=\"profile-photo\" src={avatar} width={250} height={250} alt=\"user avatar\" />\n                    <Info className=\"profile-info\">\n                        <Name>{name}</Name>\n                        <p>Username: {login}</p>\n                        <Bio>{bio}</Bio>\n                        <p>Repositories: {repos}</p>\n                    </Info>\n                </Profile>\n            )}\n        </>\n    );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Heading = styled.h1`\n    text-align: center;\n    margin: 15px 0;\n`;\n\nconst SearchWrap = styled.div`\n    text-align: center;\n`;\n\nconst SearchInput = styled.input`\n    margin-bottom: 10px;\n    border-radius: 15px;\n    padding: 10px;\n    border: 1px solid #eee;\n`;\n\nconst CheckboxWrap = styled.div`\n    text-align: center;\n`;\n\nconst CheckLabel = styled.label`\n    position: relative;\n`;\n\nconst CheckInput = styled.input`\n    position: absolute;\n    left: -22px;\n    top: -1px;\n    &:active,\n    :focus {\n        outline: 1px solid #222; /*visually hides the outline*/\n    }\n`;\n\nconst Ul = styled.ul`\n    list-style-type: none;\n    margin: 20px;\n    margin-left: 50px;\n\n    /* horizontal list */\n    /* display: flex;\n    flex-wrap: wrap;        \n    justify-content: space-evenly; */\n`;\n\nconst Li = styled.li`\n    margin: 20px;\n    font-size: 1.2em;\n`;\n\nconst StLink = styled(Link)`\n    text-decoration: none;\n    &:hover,\n    :active {\n        color: #2fd;\n        text-decoration: underline;\n    }\n`;\n\nfunction Repos({ repos }) {\n    const [query, setQuery] = useState('');\n    const [sortByStars, setSortByStars] = useState(false);\n\n    return (\n        <>\n            <Heading>Public repositories list</Heading>\n            <SearchWrap>\n                <label>\n                    Search: <SearchInput type=\"text\" onChange={e => setQuery(e.target.value.toLowerCase())} />\n                </label>\n            </SearchWrap>\n            <CheckboxWrap>\n                <CheckLabel>\n                    <CheckInput type=\"checkbox\" onChange={e => setSortByStars(e.target.checked)} />\n                    Sort by stars\n                </CheckLabel>\n            </CheckboxWrap>\n            <Ul>\n                {repos\n                    .filter(r => r.name.toLowerCase().includes(query))\n                    .sort((a, b) => (sortByStars ? b.stargazers_count - a.stargazers_count : 0))\n                    .map(repo => (\n                        <Li key={repo.id}>\n                            <StLink to={{ pathname: '/repo', search: `?id=${repo.id}`, state: repo }}>{repo.name}</StLink>\n                        </Li>\n                    ))}\n            </Ul>\n        </>\n    );\n}\n\nexport default Repos;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst A = styled.a`\n    text-decoration: none;\n`;\n\nconst H1 = styled.h1`\n    text-align: center;\n    color: #2fd;\n    font-size: 3.5em;\n    padding: 10px;\n`;\n\nconst P = styled.p`\n    text-align: center;\n    margin-bottom: 15px;\n`;\n\nconst Desc = styled.p`\n    text-align: center;\n    margin: auto;\n    margin-bottom: 15px;\n    position: relative;\n    width: max-content;\n\n    &:before {\n        content: '';\n        position: absolute;\n        left: -20px;\n        width: 10px;\n        height: 100%;\n        background: linear-gradient(to right, #222, #fff);\n    }\n`;\n\nfunction CurrentRepo(props) {\n    const repos = props.repos;\n    const query = new URLSearchParams(props.location.search);\n\n    const id = Number(query.get('id'));\n\n    const repo = repos.filter(r => r.id === id)[0] || []; // filter returns single elem array, initially undefined\n\n    return (\n        <>\n            <A href={repo.html_url}>\n                <H1>{repo.name}</H1>\n            </A>\n            <P>\n                {repo.stargazers_count}\n                <span role=\"img\" aria-label=\"stars\">\n                    &#127775;\n                </span>\n            </P>\n            <Desc>{repo.description}</Desc>\n            <P>Issues: {repo.open_issues}</P>\n        </>\n    );\n}\n\nexport default withRouter(CurrentRepo);\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport HomePage from './HomePage';\nimport Repos from './Repos';\nimport CurrentRepo from './CurrentRepo';\n\nfunction App() {\n    const [profileName, setProfileName] = useState('');\n    const [repos, setRepos] = useState([]);\n\n    const getValidProfileName = name => {\n        const input = name.trim();\n        const regex = /^[a-zA-Z0-9-]+$/;\n\n        if (regex.test(input)) {\n            setProfileName(input);\n        }\n    };\n\n    useEffect(() => {\n        async function getData() {\n            const res = await fetch(`https://api.github.com/users/${profileName}/repos`);\n            const data = await res.json();\n\n            setRepos(data);\n        }\n        getData();\n    }, [profileName]);\n\n    return (\n        <>\n            <div className=\"App\">\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Route exact path=\"/\">\n                        <HomePage profileName={profileName} validate={getValidProfileName} />\n                    </Route>\n\n                    <Route exact path=\"/repos/\">\n                        <Repos repos={repos} />\n                    </Route>\n\n                    <Route path=\"/repo/\">\n                        <CurrentRepo repos={repos} />\n                    </Route>\n                </Router>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n        margin:0;\n        padding:0;\n        background-color: #222;\n        color: #fff;\n    }\n`;\n\nReactDOM.render(\n    <>\n        <GlobalStyle />\n        <App />\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}